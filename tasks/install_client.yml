---
- name: Check openvpn variables. no_log=true
  ansible.builtin.fail:
    msg: item is empty or None.
  loop:
    - "{{ openvpn_client_password }}"
    - "{{ openvpn_ca_password }}"
    - "{{ openvpn_server_dns }}"
    - "{{ openvpn_server_ansible_host }}"
  when:
    - item is none or item | length == 0
  no_log: true

- name: Update and upgrade apt packages
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
    autoremove: true

- name: Install openvpn
  ansible.builtin.apt:
    name: openvpn
    state: present

- name: Check if client configuration exists on OpenVPN client
  ansible.builtin.stat:
    path: "/etc/openvpn/client.conf"
  register: client_conf_stat

- name: Get openvpn client configuration
  ansible.builtin.include_role:
    name: pyronear.openvpn
    tasks_from: get_conf

- name: Deploy client configuration on client
  ansible.builtin.copy:
    src: "/tmp/{{ inventory_hostname }}.ovpn"
    dest: "/etc/openvpn/client.conf"
    mode: '0600'
  when: not client_conf_stat.stat.exists

- name: Check if client.conf file is not empty
  ansible.builtin.stat:
    path: /etc/openvpn/client.conf
  register: conf_file_stat

- name: Fail if client.conf file is empty
  ansible.builtin.fail:
    msg: "The /etc/openvpn/client.conf file is empty!"
  when: conf_file_stat.stat.size == 0

- name: Ajouter la directive askpass dans client.conf
  ansible.builtin.lineinfile:
    path: /etc/openvpn/client.conf
    line: "askpass /etc/openvpn/auth.txt"
    insertafter: EOF
    state: present

- name: Cr√©er le fichier auth.txt
  ansible.builtin.file:
    path: /etc/openvpn/auth.txt
    state: touch
    mode: '0600'
    owner: root
    group: root
    access_time: preserve
    modification_time: preserve

- name: Ajouter le mot de passe OpenVPN dans auth.txt
  ansible.builtin.copy:
    dest: /etc/openvpn/auth.txt
    content: "{{ openvpn_client_password }}"
    owner: root
    group: root
    mode: '0600'
  no_log: true
